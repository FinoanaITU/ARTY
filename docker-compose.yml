version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: arty-postgres
    environment:
      POSTGRES_DB: artizaho_db
      POSTGRES_USER: artizaho_user
      POSTGRES_PASSWORD: artizaho_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Back/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - arty-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U artizaho_user -d artizaho_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    container_name: arty-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - arty-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (FastAPI)
  backend:
    build:
      context: ./Back
      dockerfile: Dockerfile
    container_name: arty-backend
    environment:
      - DATABASE_URL=postgresql://artizaho_user:artizaho_password@postgres:5432/artizaho_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/3
      - SECRET_KEY=your-super-secret-key-here-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - APP_NAME=Artizaho Backend
      - APP_VERSION=1.0.0
      - DEBUG=True
      - ENVIRONMENT=development
      - ALLOWED_ORIGINS=["http://localhost:3000", "http://localhost:8080", "http://frontend:80"]
      - ALLOWED_CREDENTIALS=True
      - STORAGE_TYPE=local
      - UPLOAD_DIR=./static/uploads
      - MAX_FILE_SIZE=10485760
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./Back:/app
      - backend_uploads:/app/static/uploads
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - arty-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  celery-worker:
    build:
      context: ./Back
      dockerfile: Dockerfile
    container_name: arty-celery-worker
    command: celery -A app.workers.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://artizaho_user:artizaho_password@postgres:5432/artizaho_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/3
      - SECRET_KEY=your-super-secret-key-here-change-in-production
      - DEBUG=True
      - ENVIRONMENT=development
    volumes:
      - ./Back:/app
      - backend_uploads:/app/static/uploads
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - arty-network
    restart: unless-stopped

  # Celery Flower (Monitoring)
  celery-flower:
    build:
      context: ./Back
      dockerfile: Dockerfile
    container_name: arty-celery-flower
    command: celery -A app.workers.celery_app flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/3
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - arty-network
    restart: unless-stopped

  # Frontend (React/TypeScript)
  frontend:
    build:
      context: ./Front
      dockerfile: Dockerfile
    container_name: arty-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - arty-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development Frontend (optional - for development with hot reload)
  frontend-dev:
    build:
      context: ./Front
      dockerfile: Dockerfile.dev
    container_name: arty-frontend-dev
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    volumes:
      - ./Front:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - arty-network
    restart: unless-stopped
    profiles:
      - dev

  # Nginx Reverse Proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: arty-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - arty-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  arty-network:
    driver: bridge 